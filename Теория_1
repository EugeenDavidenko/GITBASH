ТЕСТИРОВАНИЕ-процесс исследования, испытания программного обеспечения, имеющий своей целью проверку соответствия фактического поведения системы ожидаемому.
QA (Quality Assurance) - обеспечение качества продукта, весь комплекс процессов, обеспечивающих качество, наиболее обширное понятие. QA интегрировано во все этапы разработки: описание проекта, тестирование, релиз, пострелизное обслуживание.
QC (Quality Control) - контроль качетсва продукта, часть QA,кторая отвечает за анализ результатов тестирования, поиск ошибок и их устранение. QC ориентирован на проверку конкретного продукта, в него входят различные процессы, такие как анализ кода, технические обзоры, анализ дизайна, тестирование.
КАЧЕСТВО - совокупность минимально допустимых требования к продукту, обусладвивающих ее пригодность удовлетворить определенные потребности в соотвествии с ее назначением.
КАЧЕСТВО ПО - совокупность характеристик программного обеспечения, относящихся к его готовности удовлетворять установленные и предплолагаемые потребности.
КОГДА НАДО НАЧИНАТЬ ТЕСТИРОВАНИЕ -  на этапе сбора ребований.
ЭВРИСТИКИ ОКОНЧАНИЯ ТЕСТИРОВАНИЯ:
  "ВРЕМЯ ВЫШЛО" - самая распространенная, тестирование заканчивается, когда вышло время, отведенное на тестирование.
  "МЕРТВОЙ ЛОШАДИ" - тестирование заканчивается, когда найдено слишком много ошибок и дальнейшее тестирование не имеет смысла.
  "ОСВЕЖАЮЩЕЙ ПАУЗЫ" - предполагает остановку когда стало скучно или пропало вдохновение.Также пауза может возникунть из-за появления ошибки большего приоритета.
  "ОТСУТСВИЕ ПРОДВИЖЕНИЯ" - любые тесты приводят к одним и тем результатам.
  "БОЛЬШЕ НЕТ ИНТЕРЕСНЫХ ВОПРОСОВ"- на все основные важные вопросы получены ответы, часто применяется вместе с другими эвристиками.
  "ПИНЬЯТЫ" - тестиование прекращается, когда появляется явная серьезная проблема.
  "ЗАДАНИЕ ВЫПОЛНЕНО" - получены ответы на все поставленные вопросы.
  "ОТМЕНА ЗАДАНИЯ" - прекрещение тестирования по требованию заказчика.
  "ЗАШЕЛ В ТУПИК" - остановка тестирования по причине того что имеется блокирующая ошибка,не препятствующая тестированию области программы (например недостаток оборуования или квалификации тестировщика).
  "ПРИВЫЧНОГО ЗАВЕРШЕНИЯ" - тестирование завершается в соответствии с протоколом, задающим некторое количество идей или циклов тестирования.
  "УКЛОНЕНИЯ/БЕЗРАЗЛИЧИЯ" - возможно в случае, когда тестировщикам неинтеренсо ка кработает программа или тетсроумое ПО является версией, которую скоре заменят.
ЗАЧЕМ ТЕСТИРОВЩИКУ ПЛАТЯТ ДЕНЬГИ - чтобы он делал продукт лучше.
БАГ(ОШИБКА) - следствие ошибки кодирования.
ДЕФЕКТ-отклонение от первоначаных бизнес-требований.
БАГРЕПОРТ-документ, отчет об ошибке.
  ОСНОВНЫЕ ЭЛЕМЕНТЫ:
    TITLE/SUMMARY - короткое описание проблемы, явно указывающее на причину и тип ошибочной ситуации.
    STEPS-шаги, по которым можно легко воспроизвести ситуацию, приведшию к ошибке.
    ФАКТИЧЕСКИЙ РЕЗУЛЬТАТ-результат, полученный после воспроизведения шагов.
    ОЖИДАЕМЫЙ РЕЗУЛЬТАТ- ожидаемый правильный результат.
  ПОЛНЫЙ СПИСОК ЭЛЕМЕНТОВ
    TITLE/SUMMARY - короткое описание проблемы, явно указывающее на причину и тип ошибочной ситуации.
    PROJECT - название тестируемого проекта.
    COMPONENT- название части или функции тестируемого продукта.
    VERSION - версия продукта, на кторой найдена ошибка.
    SEVERITY(СЕРЬЕЗНОСТЬ):
      S1 Блокирующий (Blocker)
      S2 Критический (Critical)
      S3 Значительный (Major)
      S4 Незначительный (Minor)
      S5 Тривиальный (Trivial)
    PRIORITY(ПРИОРИТЕТ):
      P1 Высокий (High)
      P2 Средний (Medium)
      P3 Низкий (Low)
    STATUS(СТАТУС) - статус бага, зависит от используемой процедуры и жизненного цикла.
    AUTHOR - создатель баг-репорта.
    ASSIGNET TO - сотрудник, назначенный на решение проблемы.
    ОКРУЖЕНИЕ-операционная система, сервис пак, для WEB тестирования - имя и версия браузера и т.д
    STEPS-шаги, по которым можно легко воспроизвести ситуацию, приведшию к ошибке.
    ФАКТИЧЕСКИЙ РЕЗУЛЬТАТ-результат, полученный после воспроизведения шагов.
    ОЖИДАЕМЫЙ РЕЗУЛЬТАТ- ожидаемый правильный результат.
    ATTACHMENT- файл с логами, скриншот или любой другой документ, который может помочь прояснить причину ошибки или указать на способ решения проблемы.
УРОВНИ ТЕСТИРОВАНИЯ
  КОМПОНЕНТНОЕ(МОДУЛЬНОЕ)- проверяет фугкциональность и ищет дефекты в частях приложения, кторые доступны и могут быть протестированы по-отдельности.
  ИНТЕГРАЦИОННОЕ-предназначено для проверки связи между компонентами, а также взаимодействия между различными частями системы.
  СИСТЕМНОЕ-основной задачей является проверка функциональный и нефункциональных требований.
  ПРИЕМОЧНОЕ-формальный процесс тестирования, который проверяет соответсвие системы требованиям и проводится с целью:
    - опредения удовлетворения системы приемочным требованиям
    -вынесения закзачиком или другим уполномоченным лицом решения о приянтии приложения
   Выполняется на основе типичных тестивых случаев и сценариев, разработанных на основании требований к данному приложению.Решение о проведнии приемочного тестирования приниматеся когда:
    -продукт достиг необходимого уровня качества
    -заказчик ознакомлен с планом примеочных работ
   Приемочное тестирование длится до тех пор пока заказчик не выносит решения об отправлении приложения на доработку или выдаче приложения.

  
